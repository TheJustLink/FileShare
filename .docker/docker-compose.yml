version: '3.9'

volumes:
  minio-data: {}

services:
  database:
    image: minio/minio:RELEASE.2024-01-18T22-51-28Z.fips
    #image: quay.io/minio/minio
    restart: always
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9090"
    ports:
      - ${MINIO_CONSOLE_PORT}:9090
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
    healthcheck:
        test: ["CMD", "curl", "-f", "http://database:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3

  app:
    build:
      context: ../src
      dockerfile: ../.docker/Dockerfile
    restart: always
    depends_on:
      - database
    ports:
      - ${APP_PORT}:80
    profiles:
      - Production
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_PORT
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80

  dev-app:
    build:
      context: ../src
      dockerfile: ../.docker/${ENVIRONMENT}.Dockerfile
    restart: always
    depends_on:
      - database
    ports:
      - ${APP_PORT}:80
    profiles:
      - Development
    volumes:
      - ../src:/app
      - ~/.nuget/packages:/root/.nuget/packages
      # Create anonymous volumes to avoid conflicts
      - /app/Domain/FileShare.Domain/bin
      - /app/Domain/FileShare.Domain/obj
      - /app/Application/FileShare.Application/bin
      - /app/Application/FileShare.Application/obj
      - /app/Infrastructure/FileShare.Persistence.Minio/bin
      - /app/Infrastructure/FileShare.Persistence.Minio/obj
      - /app/Presentation/FileShare.Web/bin
      - /app/Presentation/FileShare.Web/obj
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_PORT
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - DOTNET_WATCH_SUPPRESS_BROWSER_REFRESH=1
      - DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER=1 